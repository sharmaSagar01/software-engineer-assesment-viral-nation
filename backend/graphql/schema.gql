scalar DateTime

type User {
  id: Int!
  userName: String!
  email: String!
  createdAt: DateTime!
  updatedAt: DateTime!https://studio.apollographql.com/sandbox?endpoint=http%3A%2F%2Flocalhost%3A4000%2F
}

type Movie {
  id: Int!
  movieName: String!
  description: String
  directorName: String!
  releaseDate: String!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type Query {
  user(id: Int!): User
  movie(id: Int!): Movie
  movies(limit: Int = 10, offset: Int = 0): [Movie!]!
}
type Mutation {
  register(
    userName: String!
    email: String! @constraint(format: "email")
    password: String!
  ): User

  login(email: String!, password: String!): User

  changePassword(oldPassword: String!, password: String!): User

  createMovie(
    movieName: String!
    description: String
    directorName: String!
    releaseDate: String!
  ): Movie

  updateMovie(
    id: Int!
    movieName: String
    description: String
    directorName: String
    releaseDate: String
  ): Movie

  deleteMovie(id: Int!): Boolean
}

type Login {
  accessToken: String!
}
